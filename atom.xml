<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hackfun - | Secblog | Pentest | Auditing | Sectool | CTF Write-up</title>
  <icon>https://www.gravatar.com/avatar/fa00ae710729f4b21e97bcbd3734b9cb</icon>
  <subtitle>Network Security Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sunnyelf.github.io/"/>
  <updated>2017-09-29T20:00:57.124Z</updated>
  <id>https://sunnyelf.github.io/</id>
  
  <author>
    <name>Jing Ling</name>
    <email>jingling@hackfun.org</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP CTF tricks parse_str and loose comparison</title>
    <link href="https://sunnyelf.github.io/2017/09/29/PHP-CTF-tricks-parse-str-and-loose-comparison/"/>
    <id>https://sunnyelf.github.io/2017/09/29/PHP-CTF-tricks-parse-str-and-loose-comparison/</id>
    <published>2017-09-29T15:31:11.000Z</published>
    <updated>2017-09-29T20:00:57.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-题目"><a href="#0x00-题目" class="headerlink" title="0x00 题目"></a>0x00 题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_GET[<span class="string">'str'</span>])) &#123;</div><div class="line">    show_source(<span class="keyword">__FILE__</span>);</div><div class="line">    <span class="keyword">die</span>();</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    <span class="keyword">include</span>(<span class="string">'flag.php'</span>);</div><div class="line">    $url = <span class="string">"www.hackfun.org"</span>;</div><div class="line">    $str = $_GET[<span class="string">'str'</span>];</div><div class="line">    @parse_str($str);</div><div class="line">    <span class="keyword">if</span> ($url[<span class="number">0</span>] != <span class="string">'QNKCDZO'</span> &amp;&amp; md5($url[<span class="number">0</span>]) == md5(<span class="string">'QNKCDZO'</span>)) &#123;</div><div class="line">        <span class="keyword">echo</span> $flag;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">exit</span>(<span class="string">'Try angain :-)'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><h2 id="0x01-解题"><a href="#0x01-解题" class="headerlink" title="0x01 解题"></a>0x01 解题</h2><p>要得到flag首先要使<code>if ($url[0] != &#39;QNKCDZO&#39; &amp;&amp; md5($url[0]) == md5(&#39;QNKCDZO&#39;))</code>成立，也就是<code>$url[0] != &#39;QNKCDZO&#39;</code>和<code>md5($url[0]) == md5(&#39;QNKCDZO&#39;)</code>都成立，如果str正常传入情况下，<code>$url[0]</code>的值是’w’，满足第一个条件<code>$url[0] != &#39;QNKCDZO&#39;</code>，但是不满足<code>md5($url[0]) == md5(&#39;QNKCDZO&#39;)</code>，但是代码中写了<code>@parse_str($str)</code>;，而<a href="http://www.w3school.com.cn/php/func_string_parse_str.asp" target="_blank" rel="external">parse_str()</a>函数会把参数字符串当做php变量解析，也就是如果str传入的是<code>url[0]=hello</code>，那么就会解析成一个数组url，且数组url的第一个值为hello，此时<code>$url[0] != &#39;QNKCDZO&#39;</code>成立，<code>md5($url[0]) == md5(&#39;QNKCDZO&#39;)</code>不成立，但是至少<code>$url[0]</code>的值可控了，仔细研究<code>md5($url[0]) == md5(&#39;QNKCDZO&#39;)</code>，可以发现<code>md5(&#39;QNKCDZO&#39;)</code>的值为字符型的’0e830400451993494058024219903391’，但是根据<a href="http://php.net/manual/zh/language.operators.comparison.php" target="_blank" rel="external">PHP手册</a>的描述：如果比较一个数字和字符串或者比较涉及到数字内容的字符串，则字符串会被转换为数值并且比较按照数值来进行。其中0e是科学计数法，因为涉及到数字内容，所以就会转换为数值，而’0e830400451993494058024219903391’转换为数值也就是0*(10^830400451993494058024219903391) = 0，所以我们只需要使<code>url[0]</code>的MD5值为类似0e开头后面全为数字的字符串就可以让<code>md5($url[0]) == md5(&#39;QNKCDZO&#39;)</code>成立，通过搜索发现很多字符串都满足条件，具体满足条件的列表可看。</p><ul><li><a href="http://blog.csdn.net/kalbertlee/article/details/70213392" target="_blank" rel="external">0e开头MD5 python生成脚本 PHP哈希弱类型比较缺陷</a></li><li><a href="http://www.cnblogs.com/Primzahl/p/6018158.html" target="_blank" rel="external">PHP处理0e开头md5哈希字符串缺陷/bug</a></li></ul><p>我们选取240610708作为<code>url[0]</code>的值，也就是使str传入的值为<code>url[0]=240610708</code>，此时<code>$url[0] != &#39;QNKCDZO&#39;</code>成立，且<code>md5($url[0]) == md5(&#39;QNKCDZO&#39;)</code>也成立：</p><p><img src="/2017/09/29/PHP-CTF-tricks-parse-str-and-loose-comparison/flag.jpg" alt="flag"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-题目&quot;&gt;&lt;a href=&quot;#0x00-题目&quot; class=&quot;headerlink&quot; title=&quot;0x00 题目&quot;&gt;&lt;/a&gt;0x00 题目&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
    
      <category term="PHP CTF tricks" scheme="https://sunnyelf.github.io/tags/PHP-CTF-tricks/"/>
    
      <category term="parse_str" scheme="https://sunnyelf.github.io/tags/parse-str/"/>
    
      <category term="loose comparison" scheme="https://sunnyelf.github.io/tags/loose-comparison/"/>
    
  </entry>
  
</feed>
